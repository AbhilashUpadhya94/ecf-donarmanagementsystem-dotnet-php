#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ECF")]
	public partial class DMSORMDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUserInformation(UserInformation instance);
    partial void UpdateUserInformation(UserInformation instance);
    partial void DeleteUserInformation(UserInformation instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertPayment(Payment instance);
    partial void UpdatePayment(Payment instance);
    partial void DeletePayment(Payment instance);
    partial void InsertLogin(Login instance);
    partial void UpdateLogin(Login instance);
    partial void DeleteLogin(Login instance);
    partial void InsertDonationType(DonationType instance);
    partial void UpdateDonationType(DonationType instance);
    partial void DeleteDonationType(DonationType instance);
    partial void InsertDonationCause(DonationCause instance);
    partial void UpdateDonationCause(DonationCause instance);
    partial void DeleteDonationCause(DonationCause instance);
    partial void InsertChequeDetail(ChequeDetail instance);
    partial void UpdateChequeDetail(ChequeDetail instance);
    partial void DeleteChequeDetail(ChequeDetail instance);
    partial void InsertCashDetail(CashDetail instance);
    partial void UpdateCashDetail(CashDetail instance);
    partial void DeleteCashDetail(CashDetail instance);
    #endregion
		
		public DMSORMDataContext() : 
				base(global::DataAccess.Properties.Settings.Default.ECFConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DMSORMDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DMSORMDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DMSORMDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DMSORMDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<UserInformation> UserInformations
		{
			get
			{
				return this.GetTable<UserInformation>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<PaymentUser> PaymentUsers
		{
			get
			{
				return this.GetTable<PaymentUser>();
			}
		}
		
		public System.Data.Linq.Table<Payment> Payments
		{
			get
			{
				return this.GetTable<Payment>();
			}
		}
		
		public System.Data.Linq.Table<Login> Logins
		{
			get
			{
				return this.GetTable<Login>();
			}
		}
		
		public System.Data.Linq.Table<DonorDetail> DonorDetails
		{
			get
			{
				return this.GetTable<DonorDetail>();
			}
		}
		
		public System.Data.Linq.Table<DonationType> DonationTypes
		{
			get
			{
				return this.GetTable<DonationType>();
			}
		}
		
		public System.Data.Linq.Table<DonationCause> DonationCauses
		{
			get
			{
				return this.GetTable<DonationCause>();
			}
		}
		
		public System.Data.Linq.Table<ChequeDetail> ChequeDetails
		{
			get
			{
				return this.GetTable<ChequeDetail>();
			}
		}
		
		public System.Data.Linq.Table<CashDetail> CashDetails
		{
			get
			{
				return this.GetTable<CashDetail>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserInformation")]
	public partial class UserInformation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserId;
		
		private string _Status;
		
		private string _Initials;
		
		private string _FirstName;
		
		private string _MiddleName;
		
		private string _LastName;
		
		private System.Nullable<char> _Gender;
		
		private System.Nullable<System.DateTime> _DOB;
		
		private string _Address;
		
		private string _City;
		
		private string _State;
		
		private System.Nullable<int> _PinCode;
		
		private string _Country;
		
		private System.Nullable<decimal> _Contact1;
		
		private System.Nullable<decimal> _Contact;
		
		private System.Nullable<bool> _Valid;
		
		private string _id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnInitialsChanging(string value);
    partial void OnInitialsChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleNameChanging(string value);
    partial void OnMiddleNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnGenderChanging(System.Nullable<char> value);
    partial void OnGenderChanged();
    partial void OnDOBChanging(System.Nullable<System.DateTime> value);
    partial void OnDOBChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnPinCodeChanging(System.Nullable<int> value);
    partial void OnPinCodeChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnContact1Changing(System.Nullable<decimal> value);
    partial void OnContact1Changed();
    partial void OnContactChanging(System.Nullable<decimal> value);
    partial void OnContactChanged();
    partial void OnValidChanging(System.Nullable<bool> value);
    partial void OnValidChanged();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    #endregion
		
		public UserInformation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Initials", DbType="VarChar(50)")]
		public string Initials
		{
			get
			{
				return this._Initials;
			}
			set
			{
				if ((this._Initials != value))
				{
					this.OnInitialsChanging(value);
					this.SendPropertyChanging();
					this._Initials = value;
					this.SendPropertyChanged("Initials");
					this.OnInitialsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleName", DbType="VarChar(50)")]
		public string MiddleName
		{
			get
			{
				return this._MiddleName;
			}
			set
			{
				if ((this._MiddleName != value))
				{
					this.OnMiddleNameChanging(value);
					this.SendPropertyChanging();
					this._MiddleName = value;
					this.SendPropertyChanged("MiddleName");
					this.OnMiddleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Char(1)")]
		public System.Nullable<char> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date")]
		public System.Nullable<System.DateTime> DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(200)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PinCode", DbType="Int")]
		public System.Nullable<int> PinCode
		{
			get
			{
				return this._PinCode;
			}
			set
			{
				if ((this._PinCode != value))
				{
					this.OnPinCodeChanging(value);
					this.SendPropertyChanging();
					this._PinCode = value;
					this.SendPropertyChanged("PinCode");
					this.OnPinCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact1", DbType="Decimal(12,0)")]
		public System.Nullable<decimal> Contact1
		{
			get
			{
				return this._Contact1;
			}
			set
			{
				if ((this._Contact1 != value))
				{
					this.OnContact1Changing(value);
					this.SendPropertyChanging();
					this._Contact1 = value;
					this.SendPropertyChanged("Contact1");
					this.OnContact1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="Decimal(12,0)")]
		public System.Nullable<decimal> Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valid", DbType="Bit")]
		public System.Nullable<bool> Valid
		{
			get
			{
				return this._Valid;
			}
			set
			{
				if ((this._Valid != value))
				{
					this.OnValidChanging(value);
					this.SendPropertyChanging();
					this._Valid = value;
					this.SendPropertyChanged("Valid");
					this.OnValidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RoleId;
		
		private string _Role1;
		
		private EntitySet<Login> _Logins;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIdChanging(int value);
    partial void OnRoleIdChanged();
    partial void OnRole1Changing(string value);
    partial void OnRole1Changed();
    #endregion
		
		public Role()
		{
			this._Logins = new EntitySet<Login>(new Action<Login>(this.attach_Logins), new Action<Login>(this.detach_Logins));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Role", Storage="_Role1", DbType="VarChar(50)")]
		public string Role1
		{
			get
			{
				return this._Role1;
			}
			set
			{
				if ((this._Role1 != value))
				{
					this.OnRole1Changing(value);
					this.SendPropertyChanging();
					this._Role1 = value;
					this.SendPropertyChanged("Role1");
					this.OnRole1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Login", Storage="_Logins", ThisKey="RoleId", OtherKey="RoleId")]
		public EntitySet<Login> Logins
		{
			get
			{
				return this._Logins;
			}
			set
			{
				this._Logins.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Logins(Login entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Logins(Login entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentUsers")]
	public partial class PaymentUser
	{
		
		private string _PaymentId;
		
		private string _UserId;
		
		private string _Modified_By;
		
		private System.Nullable<System.TimeSpan> _Modified_time;
		
		public PaymentUser()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentId", DbType="VarChar(50)")]
		public string PaymentId
		{
			get
			{
				return this._PaymentId;
			}
			set
			{
				if ((this._PaymentId != value))
				{
					this._PaymentId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="VarChar(50)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_By", DbType="VarChar(50)")]
		public string Modified_By
		{
			get
			{
				return this._Modified_By;
			}
			set
			{
				if ((this._Modified_By != value))
				{
					this._Modified_By = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_time", DbType="Time")]
		public System.Nullable<System.TimeSpan> Modified_time
		{
			get
			{
				return this._Modified_time;
			}
			set
			{
				if ((this._Modified_time != value))
				{
					this._Modified_time = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payment")]
	public partial class Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.TimeSpan> _Modified_time;
		
		private string _Modified_By;
		
		private string _PaymentId;
		
		private string _DtypeId;
		
		private string _TransactionId;
		
		private string _GatewayCode;
		
		private string _Status;
		
		private string _CurrencyType;
		
		private System.Nullable<double> _Amount;
		
		private string _CauseId;
		
		private string _ChequeId;
		
		private string _CashId;
		
		private string _Acknowledge;
		
		private EntityRef<DonationType> _DonationType;
		
		private EntityRef<DonationCause> _DonationCause;
		
		private EntityRef<ChequeDetail> _ChequeDetail;
		
		private EntityRef<CashDetail> _CashDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModified_timeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnModified_timeChanged();
    partial void OnModified_ByChanging(string value);
    partial void OnModified_ByChanged();
    partial void OnPaymentIdChanging(string value);
    partial void OnPaymentIdChanged();
    partial void OnDtypeIdChanging(string value);
    partial void OnDtypeIdChanged();
    partial void OnTransactionIdChanging(string value);
    partial void OnTransactionIdChanged();
    partial void OnGatewayCodeChanging(string value);
    partial void OnGatewayCodeChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnCurrencyTypeChanging(string value);
    partial void OnCurrencyTypeChanged();
    partial void OnAmountChanging(System.Nullable<double> value);
    partial void OnAmountChanged();
    partial void OnCauseIdChanging(string value);
    partial void OnCauseIdChanged();
    partial void OnChequeIdChanging(string value);
    partial void OnChequeIdChanged();
    partial void OnCashIdChanging(string value);
    partial void OnCashIdChanged();
    partial void OnAcknowledgeChanging(string value);
    partial void OnAcknowledgeChanged();
    #endregion
		
		public Payment()
		{
			this._DonationType = default(EntityRef<DonationType>);
			this._DonationCause = default(EntityRef<DonationCause>);
			this._ChequeDetail = default(EntityRef<ChequeDetail>);
			this._CashDetail = default(EntityRef<CashDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_time", DbType="Time")]
		public System.Nullable<System.TimeSpan> Modified_time
		{
			get
			{
				return this._Modified_time;
			}
			set
			{
				if ((this._Modified_time != value))
				{
					this.OnModified_timeChanging(value);
					this.SendPropertyChanging();
					this._Modified_time = value;
					this.SendPropertyChanged("Modified_time");
					this.OnModified_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_By", DbType="VarChar(50)")]
		public string Modified_By
		{
			get
			{
				return this._Modified_By;
			}
			set
			{
				if ((this._Modified_By != value))
				{
					this.OnModified_ByChanging(value);
					this.SendPropertyChanging();
					this._Modified_By = value;
					this.SendPropertyChanged("Modified_By");
					this.OnModified_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentId", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PaymentId
		{
			get
			{
				return this._PaymentId;
			}
			set
			{
				if ((this._PaymentId != value))
				{
					this.OnPaymentIdChanging(value);
					this.SendPropertyChanging();
					this._PaymentId = value;
					this.SendPropertyChanged("PaymentId");
					this.OnPaymentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DtypeId", DbType="VarChar(50)")]
		public string DtypeId
		{
			get
			{
				return this._DtypeId;
			}
			set
			{
				if ((this._DtypeId != value))
				{
					if (this._DonationType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDtypeIdChanging(value);
					this.SendPropertyChanging();
					this._DtypeId = value;
					this.SendPropertyChanged("DtypeId");
					this.OnDtypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionId", DbType="VarChar(50)")]
		public string TransactionId
		{
			get
			{
				return this._TransactionId;
			}
			set
			{
				if ((this._TransactionId != value))
				{
					this.OnTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._TransactionId = value;
					this.SendPropertyChanged("TransactionId");
					this.OnTransactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GatewayCode", DbType="VarChar(50)")]
		public string GatewayCode
		{
			get
			{
				return this._GatewayCode;
			}
			set
			{
				if ((this._GatewayCode != value))
				{
					this.OnGatewayCodeChanging(value);
					this.SendPropertyChanging();
					this._GatewayCode = value;
					this.SendPropertyChanged("GatewayCode");
					this.OnGatewayCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyType", DbType="VarChar(50)")]
		public string CurrencyType
		{
			get
			{
				return this._CurrencyType;
			}
			set
			{
				if ((this._CurrencyType != value))
				{
					this.OnCurrencyTypeChanging(value);
					this.SendPropertyChanging();
					this._CurrencyType = value;
					this.SendPropertyChanged("CurrencyType");
					this.OnCurrencyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauseId", DbType="VarChar(50)")]
		public string CauseId
		{
			get
			{
				return this._CauseId;
			}
			set
			{
				if ((this._CauseId != value))
				{
					if (this._DonationCause.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCauseIdChanging(value);
					this.SendPropertyChanging();
					this._CauseId = value;
					this.SendPropertyChanged("CauseId");
					this.OnCauseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChequeId", DbType="VarChar(50)")]
		public string ChequeId
		{
			get
			{
				return this._ChequeId;
			}
			set
			{
				if ((this._ChequeId != value))
				{
					if (this._ChequeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnChequeIdChanging(value);
					this.SendPropertyChanging();
					this._ChequeId = value;
					this.SendPropertyChanged("ChequeId");
					this.OnChequeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashId", DbType="VarChar(50)")]
		public string CashId
		{
			get
			{
				return this._CashId;
			}
			set
			{
				if ((this._CashId != value))
				{
					if (this._CashDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCashIdChanging(value);
					this.SendPropertyChanging();
					this._CashId = value;
					this.SendPropertyChanged("CashId");
					this.OnCashIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Acknowledge", DbType="VarChar(50)")]
		public string Acknowledge
		{
			get
			{
				return this._Acknowledge;
			}
			set
			{
				if ((this._Acknowledge != value))
				{
					this.OnAcknowledgeChanging(value);
					this.SendPropertyChanging();
					this._Acknowledge = value;
					this.SendPropertyChanged("Acknowledge");
					this.OnAcknowledgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonationType_Payment", Storage="_DonationType", ThisKey="DtypeId", OtherKey="DtypeId", IsForeignKey=true)]
		public DonationType DonationType
		{
			get
			{
				return this._DonationType.Entity;
			}
			set
			{
				DonationType previousValue = this._DonationType.Entity;
				if (((previousValue != value) 
							|| (this._DonationType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonationType.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._DonationType.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._DtypeId = value.DtypeId;
					}
					else
					{
						this._DtypeId = default(string);
					}
					this.SendPropertyChanged("DonationType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonationCause_Payment", Storage="_DonationCause", ThisKey="CauseId", OtherKey="CauseId", IsForeignKey=true)]
		public DonationCause DonationCause
		{
			get
			{
				return this._DonationCause.Entity;
			}
			set
			{
				DonationCause previousValue = this._DonationCause.Entity;
				if (((previousValue != value) 
							|| (this._DonationCause.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonationCause.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._DonationCause.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._CauseId = value.CauseId;
					}
					else
					{
						this._CauseId = default(string);
					}
					this.SendPropertyChanged("DonationCause");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChequeDetail_Payment", Storage="_ChequeDetail", ThisKey="ChequeId", OtherKey="CDID", IsForeignKey=true)]
		public ChequeDetail ChequeDetail
		{
			get
			{
				return this._ChequeDetail.Entity;
			}
			set
			{
				ChequeDetail previousValue = this._ChequeDetail.Entity;
				if (((previousValue != value) 
							|| (this._ChequeDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ChequeDetail.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._ChequeDetail.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._ChequeId = value.CDID;
					}
					else
					{
						this._ChequeId = default(string);
					}
					this.SendPropertyChanged("ChequeDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CashDetail_Payment", Storage="_CashDetail", ThisKey="CashId", OtherKey="Id", IsForeignKey=true)]
		public CashDetail CashDetail
		{
			get
			{
				return this._CashDetail.Entity;
			}
			set
			{
				CashDetail previousValue = this._CashDetail.Entity;
				if (((previousValue != value) 
							|| (this._CashDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CashDetail.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._CashDetail.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._CashId = value.Id;
					}
					else
					{
						this._CashId = default(string);
					}
					this.SendPropertyChanged("CashDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Login")]
	public partial class Login : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserID;
		
		private string _UserName;
		
		private string _Password;
		
		private string _Email;
		
		private System.Nullable<int> _NoOfAttempts;
		
		private System.Nullable<int> _RoleId;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNoOfAttemptsChanging(System.Nullable<int> value);
    partial void OnNoOfAttemptsChanged();
    partial void OnRoleIdChanging(System.Nullable<int> value);
    partial void OnRoleIdChanged();
    #endregion
		
		public Login()
		{
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfAttempts", DbType="Int")]
		public System.Nullable<int> NoOfAttempts
		{
			get
			{
				return this._NoOfAttempts;
			}
			set
			{
				if ((this._NoOfAttempts != value))
				{
					this.OnNoOfAttemptsChanging(value);
					this.SendPropertyChanging();
					this._NoOfAttempts = value;
					this.SendPropertyChanged("NoOfAttempts");
					this.OnNoOfAttemptsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="Int")]
		public System.Nullable<int> RoleId
		{
			get
			{
				return this._RoleId;
			}
			set
			{
				if ((this._RoleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIdChanging(value);
					this.SendPropertyChanging();
					this._RoleId = value;
					this.SendPropertyChanged("RoleId");
					this.OnRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_Login", Storage="_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Logins.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Logins.Add(this);
						this._RoleId = value.RoleId;
					}
					else
					{
						this._RoleId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonorDetails")]
	public partial class DonorDetail
	{
		
		private string _UserId;
		
		private string _DonorBucket;
		
		private System.Nullable<System.DateTime> _PledgeDate;
		
		private System.Nullable<double> _PledgeAmount;
		
		private System.Nullable<System.DateTime> _DonationDate;
		
		private string _Segment;
		
		private string _Source;
		
		private string _FinancialYear;
		
		private string _Interval;
		
		public DonorDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="VarChar(50)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonorBucket", DbType="VarChar(50)")]
		public string DonorBucket
		{
			get
			{
				return this._DonorBucket;
			}
			set
			{
				if ((this._DonorBucket != value))
				{
					this._DonorBucket = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PledgeDate", DbType="Date")]
		public System.Nullable<System.DateTime> PledgeDate
		{
			get
			{
				return this._PledgeDate;
			}
			set
			{
				if ((this._PledgeDate != value))
				{
					this._PledgeDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PledgeAmount", DbType="Float")]
		public System.Nullable<double> PledgeAmount
		{
			get
			{
				return this._PledgeAmount;
			}
			set
			{
				if ((this._PledgeAmount != value))
				{
					this._PledgeAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonationDate", DbType="Date")]
		public System.Nullable<System.DateTime> DonationDate
		{
			get
			{
				return this._DonationDate;
			}
			set
			{
				if ((this._DonationDate != value))
				{
					this._DonationDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Segment", DbType="VarChar(50)")]
		public string Segment
		{
			get
			{
				return this._Segment;
			}
			set
			{
				if ((this._Segment != value))
				{
					this._Segment = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="VarChar(50)")]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this._Source = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancialYear", DbType="VarChar(50)")]
		public string FinancialYear
		{
			get
			{
				return this._FinancialYear;
			}
			set
			{
				if ((this._FinancialYear != value))
				{
					this._FinancialYear = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Interval", DbType="VarChar(50)")]
		public string Interval
		{
			get
			{
				return this._Interval;
			}
			set
			{
				if ((this._Interval != value))
				{
					this._Interval = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonationType")]
	public partial class DonationType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.TimeSpan> _Modified_time;
		
		private string _Modified_By;
		
		private string _DtypeId;
		
		private string _Type;
		
		private EntitySet<Payment> _Payments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModified_timeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnModified_timeChanged();
    partial void OnModified_ByChanging(string value);
    partial void OnModified_ByChanged();
    partial void OnDtypeIdChanging(string value);
    partial void OnDtypeIdChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public DonationType()
		{
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_time", DbType="Time")]
		public System.Nullable<System.TimeSpan> Modified_time
		{
			get
			{
				return this._Modified_time;
			}
			set
			{
				if ((this._Modified_time != value))
				{
					this.OnModified_timeChanging(value);
					this.SendPropertyChanging();
					this._Modified_time = value;
					this.SendPropertyChanged("Modified_time");
					this.OnModified_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_By", DbType="VarChar(50)")]
		public string Modified_By
		{
			get
			{
				return this._Modified_By;
			}
			set
			{
				if ((this._Modified_By != value))
				{
					this.OnModified_ByChanging(value);
					this.SendPropertyChanging();
					this._Modified_By = value;
					this.SendPropertyChanged("Modified_By");
					this.OnModified_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DtypeId", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DtypeId
		{
			get
			{
				return this._DtypeId;
			}
			set
			{
				if ((this._DtypeId != value))
				{
					this.OnDtypeIdChanging(value);
					this.SendPropertyChanging();
					this._DtypeId = value;
					this.SendPropertyChanged("DtypeId");
					this.OnDtypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonationType_Payment", Storage="_Payments", ThisKey="DtypeId", OtherKey="DtypeId")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.DonationType = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.DonationType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonationCause")]
	public partial class DonationCause : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.TimeSpan> _Modified_time;
		
		private string _Modified_By;
		
		private string _CauseId;
		
		private System.Nullable<double> _CauseAmount;
		
		private string _Desc;
		
		private EntitySet<Payment> _Payments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModified_timeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnModified_timeChanged();
    partial void OnModified_ByChanging(string value);
    partial void OnModified_ByChanged();
    partial void OnCauseIdChanging(string value);
    partial void OnCauseIdChanged();
    partial void OnCauseAmountChanging(System.Nullable<double> value);
    partial void OnCauseAmountChanged();
    partial void OnDescChanging(string value);
    partial void OnDescChanged();
    #endregion
		
		public DonationCause()
		{
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_time", DbType="Time")]
		public System.Nullable<System.TimeSpan> Modified_time
		{
			get
			{
				return this._Modified_time;
			}
			set
			{
				if ((this._Modified_time != value))
				{
					this.OnModified_timeChanging(value);
					this.SendPropertyChanging();
					this._Modified_time = value;
					this.SendPropertyChanged("Modified_time");
					this.OnModified_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_By", DbType="VarChar(50)")]
		public string Modified_By
		{
			get
			{
				return this._Modified_By;
			}
			set
			{
				if ((this._Modified_By != value))
				{
					this.OnModified_ByChanging(value);
					this.SendPropertyChanging();
					this._Modified_By = value;
					this.SendPropertyChanged("Modified_By");
					this.OnModified_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauseId", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CauseId
		{
			get
			{
				return this._CauseId;
			}
			set
			{
				if ((this._CauseId != value))
				{
					this.OnCauseIdChanging(value);
					this.SendPropertyChanging();
					this._CauseId = value;
					this.SendPropertyChanged("CauseId");
					this.OnCauseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CauseAmount", DbType="Float")]
		public System.Nullable<double> CauseAmount
		{
			get
			{
				return this._CauseAmount;
			}
			set
			{
				if ((this._CauseAmount != value))
				{
					this.OnCauseAmountChanging(value);
					this.SendPropertyChanging();
					this._CauseAmount = value;
					this.SendPropertyChanged("CauseAmount");
					this.OnCauseAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Desc]", Storage="_Desc", DbType="VarChar(100)")]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this.OnDescChanging(value);
					this.SendPropertyChanging();
					this._Desc = value;
					this.SendPropertyChanged("Desc");
					this.OnDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonationCause_Payment", Storage="_Payments", ThisKey="CauseId", OtherKey="CauseId")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.DonationCause = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.DonationCause = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChequeDetails")]
	public partial class ChequeDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<System.TimeSpan> _Modified_time;
		
		private string _Modified_By;
		
		private System.Nullable<System.TimeSpan> _Created_time;
		
		private string _Created_By;
		
		private string _CDID;
		
		private System.Nullable<decimal> _ChequeNumber;
		
		private string _BankName;
		
		private double _Amount;
		
		private EntitySet<Payment> _Payments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnModified_timeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnModified_timeChanged();
    partial void OnModified_ByChanging(string value);
    partial void OnModified_ByChanged();
    partial void OnCreated_timeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnCreated_timeChanged();
    partial void OnCreated_ByChanging(string value);
    partial void OnCreated_ByChanged();
    partial void OnCDIDChanging(string value);
    partial void OnCDIDChanged();
    partial void OnChequeNumberChanging(System.Nullable<decimal> value);
    partial void OnChequeNumberChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    partial void OnAmountChanging(double value);
    partial void OnAmountChanged();
    #endregion
		
		public ChequeDetail()
		{
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_time", DbType="Time")]
		public System.Nullable<System.TimeSpan> Modified_time
		{
			get
			{
				return this._Modified_time;
			}
			set
			{
				if ((this._Modified_time != value))
				{
					this.OnModified_timeChanging(value);
					this.SendPropertyChanging();
					this._Modified_time = value;
					this.SendPropertyChanged("Modified_time");
					this.OnModified_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_By", DbType="VarChar(50)")]
		public string Modified_By
		{
			get
			{
				return this._Modified_By;
			}
			set
			{
				if ((this._Modified_By != value))
				{
					this.OnModified_ByChanging(value);
					this.SendPropertyChanging();
					this._Modified_By = value;
					this.SendPropertyChanged("Modified_By");
					this.OnModified_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_time", DbType="Time")]
		public System.Nullable<System.TimeSpan> Created_time
		{
			get
			{
				return this._Created_time;
			}
			set
			{
				if ((this._Created_time != value))
				{
					this.OnCreated_timeChanging(value);
					this.SendPropertyChanging();
					this._Created_time = value;
					this.SendPropertyChanged("Created_time");
					this.OnCreated_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_By", DbType="VarChar(50)")]
		public string Created_By
		{
			get
			{
				return this._Created_By;
			}
			set
			{
				if ((this._Created_By != value))
				{
					this.OnCreated_ByChanging(value);
					this.SendPropertyChanging();
					this._Created_By = value;
					this.SendPropertyChanged("Created_By");
					this.OnCreated_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CDID", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CDID
		{
			get
			{
				return this._CDID;
			}
			set
			{
				if ((this._CDID != value))
				{
					this.OnCDIDChanging(value);
					this.SendPropertyChanging();
					this._CDID = value;
					this.SendPropertyChanged("CDID");
					this.OnCDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChequeNumber", DbType="Decimal(12,0)")]
		public System.Nullable<decimal> ChequeNumber
		{
			get
			{
				return this._ChequeNumber;
			}
			set
			{
				if ((this._ChequeNumber != value))
				{
					this.OnChequeNumberChanging(value);
					this.SendPropertyChanging();
					this._ChequeNumber = value;
					this.SendPropertyChanged("ChequeNumber");
					this.OnChequeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="VarChar(50)")]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float NOT NULL")]
		public double Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ChequeDetail_Payment", Storage="_Payments", ThisKey="CDID", OtherKey="ChequeId")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.ChequeDetail = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.ChequeDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CashDetails")]
	public partial class CashDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Id;
		
		private System.Nullable<double> _Amount;
		
		private string _ReceiptId;
		
		private string _Modified_By;
		
		private System.Nullable<System.TimeSpan> _Modified_time;
		
		private EntitySet<Payment> _Payments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(string value);
    partial void OnIdChanged();
    partial void OnAmountChanging(System.Nullable<double> value);
    partial void OnAmountChanged();
    partial void OnReceiptIdChanging(string value);
    partial void OnReceiptIdChanged();
    partial void OnModified_ByChanging(string value);
    partial void OnModified_ByChanged();
    partial void OnModified_timeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnModified_timeChanged();
    #endregion
		
		public CashDetail()
		{
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Float")]
		public System.Nullable<double> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptId", DbType="VarChar(50)")]
		public string ReceiptId
		{
			get
			{
				return this._ReceiptId;
			}
			set
			{
				if ((this._ReceiptId != value))
				{
					this.OnReceiptIdChanging(value);
					this.SendPropertyChanging();
					this._ReceiptId = value;
					this.SendPropertyChanged("ReceiptId");
					this.OnReceiptIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_By", DbType="VarChar(50)")]
		public string Modified_By
		{
			get
			{
				return this._Modified_By;
			}
			set
			{
				if ((this._Modified_By != value))
				{
					this.OnModified_ByChanging(value);
					this.SendPropertyChanging();
					this._Modified_By = value;
					this.SendPropertyChanged("Modified_By");
					this.OnModified_ByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified_time", DbType="Time")]
		public System.Nullable<System.TimeSpan> Modified_time
		{
			get
			{
				return this._Modified_time;
			}
			set
			{
				if ((this._Modified_time != value))
				{
					this.OnModified_timeChanging(value);
					this.SendPropertyChanging();
					this._Modified_time = value;
					this.SendPropertyChanged("Modified_time");
					this.OnModified_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CashDetail_Payment", Storage="_Payments", ThisKey="Id", OtherKey="CashId")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.CashDetail = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.CashDetail = null;
		}
	}
}
#pragma warning restore 1591
